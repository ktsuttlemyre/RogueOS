location / {
    default_type text/html;
    content_by_lua_block {
        ngx.log(ngx.STDERR, 'triggered custom code')
        local function quote(param)
            return "'" .. param:gsub("'", [['\'']]) .. "'"
        end

        #write timestamp
        local file, err = io.open("$host.visited.timestamp", "w+b")
        if file == nil then
            print("Couldn't open file: " .. err)
        else
            file:write(os.time(os.date("!*t")))
            file:close()
        end

        local file = io.open("$host.status.timestamp", "rb")
        local content = file:read("*all")
        f:close()
        if (content == "waking" ) or (content == "sleeping" )  then
            --wait

            value = ngx.var.some_ngin
            
            local file = io.popen("/scripts/wait_till_online.sh " .. quote(ngx.var.host))
            local result = file:read("*all")
            if (result == "offline" ) then
            ngx.say(result)
        else if(content == "asleep") then
            --wake it up
            local myvar = "abcd"
            local file = io.popen("/scripts/generate-index.sh " .. quote(myvar))
            local result = file:read("*all")
            file:close()
            ngx.say(result)
            timeout 22 sh -c 'until nc -z $0 $1; do sleep 1; done' localhost 555 &> /dev/null && echo "Online" || echo "Offline"
            --continue to host
        end

        #debug ngx.print("serice is: " .. content)
        #service expected to be awake
        --continue to host
    }
}
